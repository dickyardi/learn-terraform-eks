# The name of the pipeline.  Must be unique.
name: "Terraform - AWS VPC"

env:
  WORKDIR: terraform-environments/aws/staging/10-vpc

on:
  push:
    # only run when files in this path changes
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#example-using-positive-and-negative-patterns-1
    paths:
    - 'terraform-environments/aws/staging/10-vpc/**'
    branches:
      - main
  pull_request:
    # only run when files in this path changes
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#example-using-positive-and-negative-patterns-1
    paths:
    - 'terraform-environments/aws/staging/10-vpc/**'

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN_STAGING }}

      - name: Terraform Format
        id: fmt
        working-directory: $WORKDIR
        run: terraform fmt

      - name: Terraform Init
        id: init
        working-directory: $WORKDIR
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: $WORKDIR
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: $WORKDIR
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
